import { TextlintPluginCreator, TextlintRuleModule } from "@textlint/kernel";
export declare type TestConfigPlugin = {
    pluginId: string;
    plugin: TextlintPluginCreator;
    options?: any;
};
export declare type TestConfigRule = {
    ruleId: string;
    rule: TextlintRuleModule;
    options?: any;
};
export declare type TestConfig = {
    plugins?: TestConfigPlugin[];
    rules: TestConfigRule[];
};
export declare type TesterValid = string | {
    text?: string;
    ext?: string;
    inputPath?: string;
    options?: any;
};
export declare type TesterInvalid = {
    text?: string;
    output?: string;
    ext?: string;
    inputPath?: string;
    options?: any;
    errors: {
        ruleId?: string;
        index?: number;
        line?: number;
        column?: number;
        message?: string;
        [index: string]: any;
    }[];
};
export declare type TestRuleSet = {
    rules: {
        [index: string]: TextlintRuleModule;
    };
    rulesOptions: any;
};
export declare type TestPluginSet = {
    plugins: {
        [index: string]: TextlintPluginCreator;
    };
    pluginOptions: any;
};
export declare class TextLintTester {
    constructor();
    testValidPattern(name: string, param: TextlintRuleModule | TestConfig, valid: TesterValid): void;
    testInvalidPattern(name: string, param: TextlintRuleModule | TestConfig, invalid: TesterInvalid): void;
    /**
     * run test for textlint rule.
     * @param {string} name name is name of the test or rule
     * @param {TextlintRuleModule|TestConfig} param param is TextlintRuleCreator or TestConfig
     * @param {string[]|object[]} [valid]
     * @param {object[]} [invalid]
     */
    run(name: string, param: TextlintRuleModule | TestConfig, {valid, invalid}: {
        valid?: TesterValid[];
        invalid?: TesterInvalid[];
    }): void;
}
