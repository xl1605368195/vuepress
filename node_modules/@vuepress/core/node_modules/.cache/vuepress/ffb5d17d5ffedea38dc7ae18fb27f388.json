{"remainingRequest":"/Users/xule/vuepress/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xule/vuepress/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xule/vuepress/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xule/vuepress/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/xule/vuepress/docs/guide/directory-structure.md?vue&type=template&id=00d489e3&","dependencies":[{"path":"/Users/xule/vuepress/docs/guide/directory-structure.md","mtime":1612280563998},{"path":"/Users/xule/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1612280262980},{"path":"/Users/xule/vuepress/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1612280264996},{"path":"/Users/xule/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1612280262980},{"path":"/Users/xule/vuepress/node_modules/vue-loader/lib/index.js","mtime":1612280264996},{"path":"/Users/xule/vuepress/node_modules/@vuepress/markdown-loader/index.js","mtime":1612280262757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}